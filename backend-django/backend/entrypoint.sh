#!/bin/sh

# ‚úÖ ‡∏£‡∏≠‡πÉ‡∏´‡πâ database ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡πà‡∏≠‡∏ô (optional ‡πÅ‡∏ï‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
echo "Waiting for database..."
# sleep 5  # ‡∏ñ‡πâ‡∏≤ DB ‡∏ä‡πâ‡∏≤‡∏•‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° sleep

# ‚úÖ migrate database
python manage.py migrate

# ‚úÖ collect static
echo "Collecting static files..."
python manage.py collectstatic --noinput

# ‚úÖ create default user + exercises
echo "Creating default CustomUser and ExerciseTypes if not exists..."
python manage.py shell << END
from django.contrib.auth import get_user_model
from datetime import date
from Smartwityouapp.models import ExerciseType   # üî• ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏õ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏Ñ‡∏∏‡∏ì

User = get_user_model()

# ----------------------
# Default CustomUser
# ----------------------
email = "default@example.com"
username = "defaultuser"
password = "password123"

if not User.objects.filter(email=email).exists():
    User.objects.create_user(
        email=email,
        username=username,
        password=password,
        birth_date=date(2000,1,1),
        gender='man',
        description='Default user',
        email_verified=True,
        leader_score=0.0,
        is_staff=True,
        is_active=True
    )
    print("‚úÖ CustomUser created:", email)
else:
    print("‚ÑπÔ∏è CustomUser already exists:", email)


# ----------------------
# Default ExerciseTypes (Grouped)
# ----------------------
default_exercises = [
    # Cardio
    {"name": "Running", "description": "‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û", "nummerber": 1},
    {"name": "Cycling", "description": "‡∏Å‡∏≤‡∏£‡∏õ‡∏±‡πà‡∏ô‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢", "nummerber": 2},
    {"name": "Swimming", "description": "‡∏Å‡∏≤‡∏£‡∏ß‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á", "nummerber": 3},
    {"name": "Walking", "description": "‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û", "nummerber": 4},
    {"name": "HIIT", "description": "‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡πâ‡∏ô‡∏™‡∏±‡πâ‡∏ô ‡πÜ", "nummerber": 5},

    # Strength
    {"name": "Weight Training", "description": "‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠", "nummerber": 6},
    {"name": "Bodyweight Exercise", "description": "‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ï‡∏±‡∏ß ‡πÄ‡∏ä‡πà‡∏ô push-up, pull-up", "nummerber": 7},
    {"name": "Yoga", "description": "‡πÇ‡∏¢‡∏Ñ‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏î‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡∏∞‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢", "nummerber": 8},
    {"name": "Pilates", "description": "‡∏û‡∏¥‡∏•‡∏≤‡∏ó‡∏¥‡∏™‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏•‡∏≥‡∏ï‡∏±‡∏ß", "nummerber": 9},

    # Team Sports
    {"name": "Football", "description": "‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡∏∏‡∏Å‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡∏°‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏Ñ", "nummerber": 10},
    {"name": "Basketball", "description": "‡∏ö‡∏≤‡∏™‡πÄ‡∏Å‡∏ï‡∏ö‡∏≠‡∏•‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ü‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡πà‡∏≠‡∏á‡∏ï‡∏±‡∏ß", "nummerber": 11},
    {"name": "Badminton", "description": "‡πÅ‡∏ö‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏£‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß", "nummerber": 12},
    {"name": "Volleyball", "description": "‡∏ß‡∏≠‡∏•‡πÄ‡∏•‡∏¢‡πå‡∏ö‡∏≠‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡∏°", "nummerber": 13},
]

for ex in default_exercises:
    if not ExerciseType.objects.filter(name=ex["name"]).exists():
        ExerciseType.objects.create(**ex)
        print("‚úÖ ExerciseType created:", ex["name"])
    else:
        print("‚ÑπÔ∏è ExerciseType already exists:", ex["name"])
END

# ‚úÖ run server ‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
exec "$@"
